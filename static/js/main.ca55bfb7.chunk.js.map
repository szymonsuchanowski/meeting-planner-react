{"version":3,"sources":["helpers/CalendarAPI.js","helpers/DataValidator.js","helpers/helpersFunctions.js","components/CalendarForm.js","components/Modal.js","components/CalendarItem.js","components/CalendarList.js","helpers/formFields.js","components/Calendar.js","App.js","reportWebVitals.js","index.js"],"names":["CalendarAPI","this","url","_fetch","fieldName","filterQuery","data","options","method","body","JSON","stringify","headers","id","additionalPath","path","fetch","then","resp","ok","json","Promise","reject","Error","DataValidator","name","regExp","err","lastName","email","date","time","inputName","inputValue","isDataValid","isMatchRegex","trim","isDateCorrect","isFutureDate","createErrObject","test","currentDate","getCurrentDate","Date","timezoneOffset","getTimezoneOffset","now","toISOString","slice","isArrayEmpty","arr","length","setDateRange","type","isObjectEmpty","obj","Object","keys","convertArrToObj","assign","createStateObject","fields","fieldsStateDataArr","createStateData","push","errors","map","input","filter","stateData","value","isValid","createStateDataWithSuggestions","showSuggestions","dataSuggestions","setDateFormat","split","reverse","join","CalendarForm","state","props","api","submitHandler","e","preventDefault","findErrors","addNewMeeting","showErrors","handleFocus","updateInputState","handleBlur","setTimeout","inputChange","target","newStateData","setState","prevState","findSuggestions","completeField","innerText","className","onSubmit","noValidate","renderFormInputs","label","onFocus","onBlur","htmlFor","setInputClassName","onChange","min","autoComplete","setBorderClassName","renderSuggestions","renderFormErrMsg","isSuggestion","renderSuggestionsList","showErrMsg","errorsArr","createErrors","validator","getInputsNames","forEach","checkDataErrors","setInputInvalid","setInputValid","inputValuesList","getInputValues","meetingData","addMeeting","stateObject","filterData","loadFilteredData","updateSuggestionsState","suggestionContentList","getSuggestionContentList","suggestionsItemList","renderSuggestionItem","suggestionsList","suggestion","Set","suggestionItem","index","onClick","errMsg","React","Component","Modal","handleClick","closeModal","classList","contains","removeMeeting","title","CalendarItem","isModal","showModal","renderItemCard","renderItemPersonInfo","renderConfirmation","monthName","toLocaleString","month","toUpperCase","dateDataArr","getDataInfo","day","year","href","CalendarList","renderSectionContent","meetingsList","renderInfoMsg","renderMeetingsList","renderMeetingItemsList","meeting","formFields","Calendar","meetings","addData","loadMeetings","catch","console","error","meetingId","removeData","_isMounted","loadData","sort","a","b","sortMeetingsByTime","App","ReactDOM","render","document","querySelector","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ca55bfb7.chunk.js","sourcesContent":["export default class CalendarAPI {\n    constructor() {\n        this.url = \"https://fake-server-trip-booking.herokuapp.com/meetings\";\n    };\n\n    loadData() {\n        return this._fetch('');\n    };\n\n    loadFilteredData(fieldName, filterQuery) {\n        return this._fetch(`?${fieldName}_like=${filterQuery}`);\n    };\n\n    addData(data) {\n        const options = {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        return this._fetch('', options);\n    };\n\n    removeData(id) {\n        const options = { method: 'DELETE' };\n        return this._fetch(`/${id}`, options);\n    };\n\n    _fetch(additionalPath, options) {\n        const path = this.url + additionalPath;\n        return fetch(path, options)\n            .then(resp => {\n                if (resp.ok) { return resp.json() }\n                return Promise.reject(new Error('No connection with json-server!'));\n            });\n    };\n}","export default class DataValidator {\n    name = {\n        regExp: /^[a-zA-Z]{3,}(?:(-| )[a-zA-Z]+){0,2}$/,\n        err: 'required (min. 3 characters)'\n    };\n\n    lastName = {\n        regExp: /^[a-zA-Z]{3,}(?:(-| )[a-zA-Z]+){0,2}$/,\n        err: 'required (min. 3 characters)'\n    };\n\n    email = {\n        regExp: /[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\n        err: 'required (valid e-mail address)'\n    };\n\n    date = {\n        regExp: /^20\\d{2}[-/.](0[1-9]|1[0-2])[-/.](0[1-9]|[12]\\d|3[01])$/,\n        err: 'required - today/future (dd.mm.yyyy)'\n    };\n\n    time = {\n        regExp: /^([01]?[0-9]|2[0-3]):[0-5][0-9]$/,\n        err: 'required (hh:mm)'\n    };\n\n    checkDataErrors(inputName, inputValue) {\n        const isDataValid = this.isMatchRegex(inputName, inputValue.trim());\n        const isDateCorrect = inputName === 'date' ? this.isFutureDate(inputValue) : true;\n        return (!isDataValid || !isDateCorrect) ? this.createErrObject(inputName) : null;\n    };\n\n    isMatchRegex(inputName, inputValue) {\n        return this[inputName].regExp.test(inputValue);\n    };\n\n    isFutureDate(inputValue) {\n        const currentDate = this.getCurrentDate();\n        return new Date(inputValue) >= new Date(currentDate);\n    };\n\n    getCurrentDate() {\n        const timezoneOffset = (new Date()).getTimezoneOffset() * 60000;\n        return (new Date(Date.now() - timezoneOffset)).toISOString().slice(0, 10);\n    };\n\n    createErrObject(inputName) {\n        return {\n            [inputName]: this[inputName].err,\n        };\n    };\n}","export const sortMeetingsByTime = (data) => {\n    return data.sort((a, b) => {\n        if (a.date === b.date) {\n            return a.time < b.time ? -1 : 1;\n        }\n        return a.date < b.date ? -1 : 1;\n    });\n};\n\nexport const isArrayEmpty = (arr) => arr.length === 0;\n\nconst getCurrentDate = () => {\n    const timezoneOffset = new Date().getTimezoneOffset() * 60000;\n    return new Date(Date.now() - timezoneOffset).toISOString().slice(0, 10);\n};\n\nexport const setDateRange = (type) =>\n    type === \"date\" ? getCurrentDate() : null;\n\nexport const isObjectEmpty = (obj) => Object.keys(obj).length === 0;\n\nexport const convertArrToObj = (arr) => Object.assign({}, ...arr);\n\nexport const createStateObject = (fields) => {\n    const fieldsStateDataArr = createStateData(fields);\n    fieldsStateDataArr.push({ errors: {} });\n    return convertArrToObj(fieldsStateDataArr);\n};\n\nconst createStateData = (fields) => {\n    return fields.map((input) => {\n        const { name, filter } = input;\n        const stateData = {\n            [name]: {\n                value: \"\",\n                isValid: true,\n            },\n        };\n        return filter\n            ? createStateDataWithSuggestions(stateData, name)\n            : stateData;\n    });\n};\n\nconst createStateDataWithSuggestions = (stateData, inputName) => {\n    return {\n        [inputName]: {\n            ...stateData[inputName],\n            showSuggestions: false,\n            dataSuggestions: [],\n        },\n    };\n};\n\nexport const getDataInfo = (date) => {\n    const newDate = new Date(date);\n    const monthName = newDate\n        .toLocaleString(\"en-us\", { month: \"short\" })\n        .toUpperCase();\n    const dateDataArr = date.split(\"-\").reverse();\n    dateDataArr[1] = monthName;\n    return dateDataArr;\n};\n\nexport const setDateFormat = (date) => date.split(\"-\").reverse().join(\".\");\n","import React from \"react\";\nimport DataValidator from \"../helpers/DataValidator\";\nimport CalendarAPI from \"../helpers/CalendarAPI\";\nimport \"./CalendarForm.css\";\nimport {\n    isArrayEmpty,\n    setDateRange,\n    isObjectEmpty,\n    convertArrToObj,\n    createStateObject,\n} from \"../helpers/helpersFunctions\";\n\nexport default class CalendarForm extends React.Component {\n    state = createStateObject(this.props.fields);\n    api = new CalendarAPI();\n\n    render() {\n        return (\n            <section className=\"calendar__section calendar__section--form\">\n                <header className=\"calendar__subheader\">\n                    <h2 className=\"calendar__subtitle\">new meeting</h2>\n                </header>\n                <div className=\"calendar__container\">\n                    <form\n                        className=\"calendar__form form\"\n                        onSubmit={this.submitHandler}\n                        noValidate\n                    >\n                        {this.renderFormInputs()}\n                        <div className=\"form__field\">\n                            <input\n                                className=\"form__submit\"\n                                value=\"Add\"\n                                type=\"submit\"\n                            />\n                        </div>\n                    </form>\n                </div>\n            </section>\n        );\n    }\n\n    renderFormInputs() {\n        const { fields } = this.props;\n        return fields.map((input) => {\n            const { name, label, type, filter } = input;\n            return (\n                <div\n                    className=\"form__field\"\n                    onFocus={() => this.handleFocus(name, filter)}\n                    onBlur={() => this.handleBlur(name, filter)}\n                    key={name}\n                >\n                    <label className=\"form__label\" htmlFor={name}>\n                        {label}\n                        <input\n                            className={this.setInputClassName(name)}\n                            id={name}\n                            name={name}\n                            type={type}\n                            value={this.state[name].value}\n                            onChange={this.inputChange}\n                            min={setDateRange(type)}\n                            autoComplete=\"off\"\n                        />\n                        <span className={this.setBorderClassName(name)}></span>\n                    </label>\n                    {this.renderSuggestions(name)}\n                    <div className=\"form__placeholder\">\n                        {this.renderFormErrMsg(name)}\n                    </div>\n                </div>\n            );\n        });\n    }\n\n    renderSuggestions(name) {\n        return this.isSuggestion(name)\n            ? this.renderSuggestionsList(name)\n            : null;\n    }\n\n    renderFormErrMsg(name) {\n        return !isObjectEmpty(this.state.errors) && this.state.errors[name]\n            ? this.showErrMsg(name)\n            : null;\n    }\n\n    submitHandler = (e) => {\n        e.preventDefault();\n        const errors = this.findErrors();\n        return isObjectEmpty(errors)\n            ? this.addNewMeeting()\n            : this.showErrors(errors);\n    };\n\n    findErrors() {\n        const errorsArr = [];\n        this.createErrors(errorsArr);\n        const errorsObj = convertArrToObj(errorsArr);\n        return errorsObj;\n    }\n\n    createErrors(errorsArr) {\n        const validator = new DataValidator();\n        const inputsNamesList = this.getInputsNames();\n        inputsNamesList.forEach((inputName) => {\n            const err = validator.checkDataErrors(\n                inputName,\n                this.state[inputName].value\n            );\n            return err\n                ? this.setInputInvalid(errorsArr, err, inputName)\n                : this.setInputValid(inputName);\n        });\n    }\n\n    setInputInvalid(errors, err, inputName) {\n        errors.push(err);\n        const newStateData = {\n            isValid: false,\n        };\n        this.updateInputState(inputName, newStateData);\n    }\n\n    setInputValid(inputName) {\n        if (!this.state[inputName].isValid) {\n            const newStateData = {\n                isValid: true,\n            };\n            this.updateInputState(inputName, newStateData);\n        }\n    }\n\n    addNewMeeting() {\n        const inputValuesList = this.getInputValues();\n        const meetingData = convertArrToObj(inputValuesList);\n        this.props.addMeeting(meetingData);\n        const stateObject = createStateObject(this.props.fields);\n        this.setState(stateObject);\n    }\n\n    showErrors(errors) {\n        this.setState({\n            errors: errors,\n        });\n    }\n\n    handleFocus = (inputName, filter) => {\n        const newStateData = {\n            showSuggestions: true,\n        };\n        return filter ? this.updateInputState(inputName, newStateData) : null;\n    };\n\n    handleBlur = (inputName, filter) => {\n        if (filter) {\n            setTimeout(() => {\n                this.updateInputState(inputName, { showSuggestions: false });\n            }, 200);\n        }\n        return null;\n    };\n\n    inputChange = (e) => {\n        e.preventDefault();\n        const { name, value } = e.target;\n        const newStateData = {\n            value,\n        };\n        this.setState(\n            (prevState) => ({\n                [name]: { ...prevState[name], ...newStateData },\n            }),\n            () => this.findSuggestions(name)\n        );\n    };\n\n    findSuggestions(inputName) {\n        return this.state[inputName].showSuggestions &&\n            this.state[inputName].value.length > 1\n            ? this.filterData(inputName)\n            : null;\n    }\n\n    filterData(inputName) {\n        this.api\n            .loadFilteredData(inputName, this.state[inputName].value)\n            .then((data) => this.updateSuggestionsState(data, inputName));\n    }\n\n    updateSuggestionsState(dataSuggestions, inputName) {\n        const newStateData = {\n            dataSuggestions,\n        };\n        this.updateInputState(inputName, newStateData);\n    }\n\n    isSuggestion(inputName) {\n        const { showSuggestions, dataSuggestions, value } =\n            this.state[inputName];\n        return (\n            showSuggestions &&\n            !isArrayEmpty(dataSuggestions) &&\n            value.length > 1\n        );\n    }\n\n    renderSuggestionsList(inputName) {\n        const suggestionContentList = this.getSuggestionContentList(inputName);\n        const suggestionsItemList = this.renderSuggestionItem(\n            suggestionContentList,\n            inputName\n        );\n        return (\n            <ul className=\"form__prompts\">\n                <li className=\"form__suggestion form__suggestion--desc\">\n                    API suggestions\n                </li>\n                {suggestionsItemList}\n            </ul>\n        );\n    }\n\n    getSuggestionContentList(inputName) {\n        const suggestionsList = this.state[inputName].dataSuggestions.map(\n            (suggestion) => suggestion[inputName]\n        );\n        return [...new Set(suggestionsList)];\n    }\n\n    renderSuggestionItem(suggestionContentList, inputName) {\n        return suggestionContentList.map((suggestionItem, index) => (\n            <li\n                className=\"form__suggestion\"\n                onClick={(e) => this.completeField(e, inputName)}\n                key={index}\n            >\n                {suggestionItem}\n            </li>\n        ));\n    }\n\n    completeField = (e, inputName) => {\n        const value = e.target.innerText;\n        const newStateData = {\n            value,\n            dataSuggestions: [],\n        };\n        this.updateInputState(inputName, newStateData);\n    };\n\n    showErrMsg(inputName) {\n        const errMsg = this.state.errors[inputName];\n        return <p className=\"form__err\">{errMsg}</p>;\n    }\n\n    updateInputState(inputName, newStateData) {\n        this.setState((prevState) => ({\n            [inputName]: { ...prevState[inputName], ...newStateData },\n        }));\n    }\n\n    getInputValues() {\n        const inputsNames = this.getInputsNames();\n        return inputsNames.map((inputName) => {\n            return { [inputName]: this.state[inputName].value.trim() };\n        });\n    }\n\n    getInputsNames() {\n        const { fields } = this.props;\n        return fields.map((input) => input.name);\n    }\n\n    setInputClassName(inputName) {\n        return this.state[inputName].isValid\n            ? \"form__input\"\n            : \"form__input form__input--invalid\";\n    }\n\n    setBorderClassName(inputName) {\n        return this.state[inputName].isValid\n            ? \"form__border\"\n            : \"form__border form__border--invalid\";\n    }\n}\n","import React from \"react\";\nimport \"./Modal.css\";\nimport { setDateFormat } from \"../helpers/helpersFunctions\";\n\nexport default class Modal extends React.Component {\n    render() {\n        const { name, lastName, date, id, closeModal, removeMeeting } =\n            this.props;\n        return (\n            <div\n                className=\"list__modal modal\"\n                onClick={(e) => this.handleClick(e)}\n                aria-hidden\n            >\n                <div className=\"modal__content\">\n                    <button\n                        className=\"modal__btn\"\n                        title=\"close window\"\n                        type=\"button\"\n                        onClick={() => closeModal()}\n                    >\n                        &#x2715;\n                    </button>\n                    <p className=\"modal__paragraph\">\n                        Remove meeting with{\" \"}\n                        <span className=\"modal__highlight\">\n                            {name} {lastName}\n                        </span>{\" \"}\n                        on {setDateFormat(date)}?\n                    </p>\n                    <div className=\"modal__actions\">\n                        <button\n                            className=\"modal__confirm\"\n                            onClick={() => removeMeeting(id)}\n                            type=\"button\"\n                        >\n                            yes\n                        </button>\n                        <button\n                            className=\"modal__cancel\"\n                            onClick={() => closeModal()}\n                            type=\"button\"\n                        >\n                            no\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    handleClick = (e) => {\n        const { closeModal } = this.props;\n        return e.target.classList.contains(\"modal\") ? closeModal() : null;\n    };\n}\n","import React from \"react\";\nimport \"./CalendarItem.css\";\nimport Modal from \"./Modal\";\nimport { getDataInfo } from \"../helpers/helpersFunctions\";\n\nexport default class CalendarItem extends React.Component {\n    state = {\n        isModal: false,\n    };\n\n    render() {\n        return (\n            <li className=\"list__item\">\n                {this.renderItemCard()}\n                {this.renderItemPersonInfo()}\n                {this.renderConfirmation()}\n            </li>\n        );\n    }\n\n    renderItemCard() {\n        const { date, time } = this.props.data;\n        const [day, month, year] = getDataInfo(date);\n        return (\n            <div className=\"list__card\">\n                <span className=\"list__window\"></span>\n                <div className=\"list__date\">\n                    <p className=\"list__day\">{+day}</p>\n                    <p className=\"list__month\">\n                        {month} {year}\n                    </p>\n                </div>\n                <p className=\"list__time\">{time}</p>\n            </div>\n        );\n    }\n\n    renderItemPersonInfo() {\n        const { name, lastName, email } = this.props.data;\n        return (\n            <div className=\"list__wrapper\">\n                <div className=\"list__person\">\n                    <p className=\"list__name\">{name}</p>\n                    <p className=\"list__surname\">{lastName}</p>\n                    <a className=\"list__email\" href={`mailto:${email}`}>\n                        {email}\n                    </a>\n                </div>\n                <button\n                    className=\"list__btn\"\n                    title=\"remove meeting\"\n                    onClick={() => this.showModal()}\n                >\n                    remove\n                </button>\n            </div>\n        );\n    }\n\n    renderConfirmation() {\n        const { removeMeeting } = this.props;\n        const { name, lastName, date, id } = this.props.data;\n        const { isModal } = this.state;\n        return isModal ? (\n            <Modal\n                name={name}\n                lastName={lastName}\n                date={date}\n                id={id}\n                closeModal={this.closeModal}\n                removeMeeting={removeMeeting}\n            />\n        ) : null;\n    }\n\n    showModal = () => {\n        this.setState({ isModal: true });\n    };\n\n    closeModal = () => {\n        this.setState({ isModal: false });\n    };\n}\n","import React from \"react\";\nimport CalendarItem from \"./CalendarItem\";\nimport \"./CalendarList.css\";\nimport { isArrayEmpty } from \"../helpers/helpersFunctions\";\n\nexport default class CalendarList extends React.Component {\n    render() {\n        return (\n            <section className=\"calendar__section calendar__section--list\">\n                <header className=\"calendar__subheader calendar__subheader--list\">\n                    <h2 className=\"calendar__subtitle\">meeting list</h2>\n                </header>\n                <div className=\"calendar__container\">\n                    {this.renderSectionContent()}\n                </div>\n            </section>\n        );\n    }\n\n    renderSectionContent() {\n        const { meetingsList } = this.props;\n        return isArrayEmpty(meetingsList)\n            ? this.renderInfoMsg()\n            : this.renderMeetingsList();\n    }\n\n    renderInfoMsg() {\n        return <p className=\"calendar__msg\">meeting list empty</p>;\n    }\n\n    renderMeetingsList() {\n        return (\n            <ol className=\"calendar__list list\">\n                {this.renderMeetingItemsList()}\n            </ol>\n        );\n    }\n\n    renderMeetingItemsList() {\n        const { meetingsList } = this.props;\n        return meetingsList.map((meeting) => (\n            <CalendarItem\n                data={meeting}\n                removeMeeting={this.props.removeMeeting}\n                key={meeting.id}\n            />\n        ));\n    }\n}\n","export const formFields = [\n    {\n        name: 'name',\n        label: 'name',\n        type: 'text',\n        filter: true\n    },\n    {\n        name: 'lastName',\n        label: 'last name',\n        type: 'text',\n        filter: true\n    },\n    {\n        name: 'email',\n        label: 'e-mail',\n        type: 'email',\n        filter: true\n    },\n    {\n        name: 'date',\n        label: 'date',\n        type: 'date',\n        filter: false\n    },\n    {\n        name: 'time',\n        label: 'time',\n        type: 'time',\n        filter: false\n    }\n]","import React from \"react\";\nimport CalendarAPI from \"../helpers/CalendarAPI\";\nimport CalendarForm from \"./CalendarForm\";\nimport CalendarList from \"./CalendarList\";\nimport { formFields as fields } from \"../helpers/formFields\";\nimport { sortMeetingsByTime } from \"../helpers/helpersFunctions\";\nimport \"./Calendar.css\";\n\nexport default class Calendar extends React.Component {\n    constructor() {\n        super();\n        this.api = new CalendarAPI();\n        this._isMounted = false;\n    }\n\n    state = {\n        meetings: [],\n    };\n\n    render() {\n        return (\n            <main className=\"calendar\">\n                <header className=\"calendar__header\">\n                    <p className=\"calendar__pretitle\">welcome to</p>\n                    <h1 className=\"calendar__title\">meeting planner</h1>\n                    <p className=\"calendar__description\">\n                        never be{\" \"}\n                        <span className=\"calendar__highlight\">late</span>\n                    </p>\n                </header>\n                <article className=\"calendar__wrapper\">\n                    <CalendarForm\n                        fields={fields}\n                        addMeeting={this.addMeeting}\n                    />\n                    <CalendarList\n                        meetingsList={this.state.meetings}\n                        removeMeeting={this.removeMeeting}\n                    />\n                </article>\n            </main>\n        );\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        this.loadMeetings();\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    addMeeting = (meetingData) => {\n        this.api\n            .addData(meetingData)\n            .then(() => this.loadMeetings())\n            .catch((err) => console.error(err));\n    };\n\n    removeMeeting = (meetingId) => {\n        this.api\n            .removeData(meetingId)\n            .then(() => this.loadMeetings())\n            .catch((err) => console.error(err));\n    };\n\n    loadMeetings() {\n        this.api\n            .loadData()\n            .then((data) => sortMeetingsByTime(data))\n            .then(\n                (data) => this._isMounted && this.setState({ meetings: data })\n            )\n            .catch((err) => console.error(err));\n    }\n}\n","import ReactDOM from 'react-dom';\nimport Calendar from './components/Calendar';\n\nfunction App() {\n  return (\n    <>\n      <Calendar />\n    </>\n  );\n};\n\nexport default App;\n\nReactDOM.render(<App />, document.querySelector('#root'));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}